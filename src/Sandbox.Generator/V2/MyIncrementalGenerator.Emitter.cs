using Microsoft.CodeAnalysis.Text;
using System.Collections.Immutable;
using System.Text;

namespace Sandbox.Generator
{
    public partial class MyIncrementalGenerator
    {
        internal sealed class Emitter
        {
            internal static SourceText Emit(ImmutableArray<MyMagicMethod> magicMethods, StringBuilder debugPrintBuilder)
            {
                StringBuilder stringBuilder = new();

                foreach (var method in magicMethods)
                {
                    stringBuilder.AppendLine($"// {method.MethodName}");
                }
                // include {{debugPrintBuilder}} for debugging as needed.
                var output = $$"""
// <auto-generated/>
// Printing methods with magic attribute
// Total methods: {{magicMethods.Length}}
{{stringBuilder}}
""";
                var sourceText = SourceText.From(output, encoding: Encoding.UTF8);
                return sourceText;
            }
        }
    }
}
